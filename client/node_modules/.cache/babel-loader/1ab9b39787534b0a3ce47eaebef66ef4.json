{"ast":null,"code":"var _jsxFileName = \"/home/rithvik/Downloads/healthcare-main/client/src/components/profile/Profile.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getProfileById } from '../../actions/profile';\nimport ProfileTop from './ProfileTop';\nimport ProfileAbout from './ProfileAbout';\nimport ProfileExperience from './ProfileExperience';\nimport ProfileEducation from './ProfileEducation';\nimport ProfileReview from './ProfileReview';\nimport ReviewForm from '../profile/ReviewForm';\nimport { Link } from 'react-router-dom';\n\nconst Profile = ({\n  getProfileById,\n  profile: {\n    profileById,\n    loading\n  },\n  authDoctor,\n  authUser,\n  match\n}) => {\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById, match.params.id]);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, profileById === null || loading ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 16\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    id: \"profile-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"current-profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"current-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    class: \"rounded-pill btn btn-dark\",\n    to: \"/profiles\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 41\n    }\n  }, \"Back to Profiles\"), authUser.isUserAuthenticated ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/appointment/${profileById.doctor._id}`,\n    type: \"button\",\n    className: \"rounded-pill btn btn-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-calendar-check\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 153\n    }\n  }), \" Book Appointment\")) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    \"data-toggle\": \"tooltip\",\n    \"data-placement\": \"right\",\n    title: \"Please Login as a User\",\n    className: \"rounded-pill btn btn-info disabled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-calendar-check\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 57\n    }\n  }), \" Book Appointment\")), authDoctor.isDoctorAuthenticated && authDoctor.loadingDoctor === false && authDoctor.doctor._id === profileById.doctor._id && /*#__PURE__*/React.createElement(Link, {\n    to: \"/edit-profile\",\n    className: \"rounded-pill btn btn-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"fas fa-edit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 53\n    }\n  }))), /*#__PURE__*/React.createElement(ProfileTop, {\n    profile: profileById,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(ProfileAbout, {\n    profile: profileById,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"exp-edu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"exp-bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"exp-common-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 45\n    }\n  }, \"Experience\"), profileById.experience.length > 0 ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 53\n    }\n  }, profileById.experience.map(experience => /*#__PURE__*/React.createElement(ProfileExperience, {\n    key: experience._id,\n    experience: experience,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 61\n    }\n  }))) : /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 53\n    }\n  }, \"No Experience credentials\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"edu-bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"exp-common-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 45\n    }\n  }, \"Education\"), profileById.education.length > 0 ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 53\n    }\n  }, profileById.education.map(education => /*#__PURE__*/React.createElement(ProfileEducation, {\n    key: education._id,\n    education: education,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 61\n    }\n  }))) : /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 53\n    }\n  }, \"No education credentials\"))), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"patient-review\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    class: \"exp-common-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 45\n    }\n  }, \"Patient Reviews\"), authUser.isUserAuthenticated ? /*#__PURE__*/React.createElement(ReviewForm, {\n    doctorId: profileById.doctor._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 52\n    }\n  }) : \"\", profileById.review.map(rev => /*#__PURE__*/React.createElement(ProfileReview, {\n    key: rev._id,\n    review: rev,\n    doctorId: match.params.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 53\n    }\n  }))))))));\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  authDoctor: PropTypes.object.isRequired,\n  authUser: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  authDoctor: state.authDoctor,\n  authUser: state.authUser\n});\n\nexport default connect(mapStateToProps, {\n  getProfileById\n})(Profile);","map":{"version":3,"sources":["/home/rithvik/Downloads/healthcare-main/client/src/components/profile/Profile.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","getProfileById","ProfileTop","ProfileAbout","ProfileExperience","ProfileEducation","ProfileReview","ReviewForm","Link","Profile","profile","profileById","loading","authDoctor","authUser","match","params","id","isUserAuthenticated","doctor","_id","isDoctorAuthenticated","loadingDoctor","experience","length","map","education","review","rev","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, {Fragment, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport {getProfileById} from '../../actions/profile';\r\nimport ProfileTop from './ProfileTop';\r\nimport ProfileAbout from './ProfileAbout';\r\nimport ProfileExperience from './ProfileExperience';\r\nimport ProfileEducation from './ProfileEducation';\r\nimport ProfileReview from './ProfileReview';\r\nimport ReviewForm from '../profile/ReviewForm';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Profile = ({\r\n    getProfileById,\r\n    profile: {profileById, loading}, authDoctor,authUser, match\r\n}) => {\r\n    useEffect(() => {\r\n        getProfileById(match.params.id);\r\n    },[getProfileById, match.params.id]);\r\n\r\n    return (\r\n        <Fragment>\r\n           {profileById === null || loading ? (\r\n               <Spinner />\r\n           ) : (\r\n               <Fragment>\r\n                    <section id=\"profile-page\">\r\n                            <div class=\"container\">\r\n                                <div class=\"current-profile\">\r\n                                    <div class=\"current-btn\">\r\n                                        <Link class=\"rounded-pill btn btn-dark\" to=\"/profiles\">Back to Profiles</Link>\r\n                                        {authUser.isUserAuthenticated ? (\r\n                                            <Fragment>\r\n                                                <Link to={`/appointment/${profileById.doctor._id}`} type=\"button\" className=\"rounded-pill btn btn-info\"><i className=\"fas fa-calendar-check\"></i> Book Appointment</Link>\r\n                                            </Fragment>\r\n                                            ) : (\r\n                                                <Fragment>\r\n                                                    <a href=\"#\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Please Login as a User\" className=\"rounded-pill btn btn-info disabled\">\r\n                                                        <i className=\"fas fa-calendar-check\"></i> Book Appointment\r\n                                                    </a>\r\n                                                </Fragment>\r\n                                            )\r\n                                        }\r\n                                        {authDoctor.isDoctorAuthenticated && \r\n                                            authDoctor.loadingDoctor === false && \r\n                                            authDoctor.doctor._id === profileById.doctor._id && (\r\n                                                <Link to='/edit-profile' className='rounded-pill btn btn-secondary'>\r\n                                                    <i class=\"fas fa-edit\"></i>\r\n                                                </Link>\r\n                                        )}\r\n                                    </div>\r\n                                    <ProfileTop profile={profileById} />\r\n                                    <ProfileAbout profile={profileById} />\r\n                                    <div className=\"exp-edu\">\r\n                                        <div className=\"exp-bottom\">\r\n                                            <h2 className=\"exp-common-heading\">Experience</h2>\r\n                                            {profileById.experience.length > 0 ? (\r\n                                                    <Fragment>\r\n                                                        {profileById.experience.map(experience => (\r\n                                                            <ProfileExperience key={experience._id} experience={experience} />\r\n                                                        ))}\r\n                                                    </Fragment>\r\n                                                ) : (\r\n                                                    <h4>No Experience credentials</h4>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                        <div className=\"edu-bottom\">\r\n                                            <h2 className=\"exp-common-heading\">Education</h2>\r\n                                            {profileById.education.length > 0 ? (\r\n                                                    <Fragment>\r\n                                                        {profileById.education.map(education => (\r\n                                                            <ProfileEducation key={education._id} education={education} />\r\n                                                        ))}\r\n                                                    </Fragment>\r\n                                                ) : (\r\n                                                    <h4>No education credentials</h4>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"patient-review\">\r\n                                            <h2 class=\"exp-common-heading\">Patient Reviews</h2> \r\n                                            { authUser.isUserAuthenticated ? \r\n                                                (\r\n                                                   <ReviewForm doctorId={profileById.doctor._id} /> \r\n                                                ) : \"\"\r\n                                            }\r\n                                            {\r\n                                                profileById.review.map(rev => (\r\n                                                    <ProfileReview key={rev._id} review={rev} doctorId={match.params.id} />\r\n                                                ))\r\n                                            }\r\n                                        </div>\r\n                                </div>\r\n                            </div>\r\n                    </section>\r\n               </Fragment>\r\n           )} \r\n        </Fragment>\r\n    );\r\n};\r\n\r\nProfile.propTypes = {\r\n    getProfileById: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n    authDoctor: PropTypes.object.isRequired,\r\n    authUser: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile,\r\n    authDoctor: state.authDoctor,\r\n    authUser: state.authUser\r\n});\r\n\r\nexport default connect(mapStateToProps, {getProfileById})(Profile);\r\n"]},"metadata":{},"sourceType":"module"}