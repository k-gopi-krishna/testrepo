{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_PROFILE, GET_PROFILE_BY_ID, GET_PROFILES, UPDATE_PROFILE, PROFILE_ERROR, CLEAR_PROFILE, ADD_REVIEW, ADD_REVIEW_ERROR, REMOVE_REVIEW, DELETE_ACCOUNT } from './types'; // Get current doctors profile\n\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/profile/me');\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Get all profiles\n\nexport const getProfiles = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/profile');\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Get profiles by doctor id\n\nexport const getProfileById = doctorId => async dispatch => {\n  try {\n    const res = await axios.get(`/api/profile/doctor/${doctorId}`);\n    dispatch({\n      type: GET_PROFILE_BY_ID,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Create / Update a profile\n\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.post('api/profile', formData, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\n\n    if (!edit) {\n      history.push('/dashboard');\n    }\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // ADD Experience\n\nexport const addExperience = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put('api/profile/experience', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Experience added\", 'success'));\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // ADD Education\n\nexport const addEducation = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put('api/profile/education', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Education added\", 'success'));\n    console.log(history);\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete experience\n\nexport const deleteExperience = exp_id => async dispatch => {\n  try {\n    const res = await axios.delete(`api/profile/experience/${exp_id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Experience Removed\", 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete education\n\nexport const deleteEducation = edu_id => async dispatch => {\n  try {\n    const res = await axios.delete(`api/profile/education/${edu_id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Education Removed\", 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Add review\n\nexport const addReview = (doctorId, formData) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.post(`/api/profile/doctor/:${doctorId}`, formData, config);\n    dispatch({\n      type: ADD_REVIEW,\n      payload: res.data\n    });\n    dispatch(setAlert('Review Added', 'success'));\n  } catch (err) {\n    dispatch({\n      type: ADD_REVIEW_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete Review\n\nexport const deleteReview = (doctorId, reviewId) => async dispatch => {\n  try {\n    await axios.delete(`/api/profile/doctor/${doctorId}/${reviewId}`);\n    dispatch({\n      type: REMOVE_REVIEW,\n      payload: reviewId\n    });\n    dispatch(setAlert('Comment removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: ADD_REVIEW_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete account and profile\n\nexport const deleteAccount = () => async dispatch => {\n  if (window.confirm('Are you sure? this can not be undone!')) {\n    try {\n      await axios.delete('/api/profile');\n      dispatch({\n        type: CLEAR_PROFILE\n      });\n      dispatch({\n        type: DELETE_ACCOUNT\n      });\n      dispatch(setAlert(\"Your Account has been Removed\", 'success'));\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: err.response.statusText,\n          status: err.response.status\n        }\n      });\n    }\n  }\n};","map":{"version":3,"sources":["/home/gopi/Desktop/medco/client/src/actions/profile.js"],"names":["axios","setAlert","GET_PROFILE","GET_PROFILE_BY_ID","GET_PROFILES","UPDATE_PROFILE","PROFILE_ERROR","CLEAR_PROFILE","ADD_REVIEW","ADD_REVIEW_ERROR","REMOVE_REVIEW","DELETE_ACCOUNT","getCurrentProfile","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","getProfiles","getProfileById","doctorId","createProfile","formData","history","edit","config","headers","post","push","errors","forEach","error","addExperience","put","addEducation","console","log","deleteExperience","exp_id","delete","deleteEducation","edu_id","addReview","deleteReview","reviewId","deleteAccount","window","confirm"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,SAAvB;AAEA,SACIC,WADJ,EAEIC,iBAFJ,EAGIC,YAHJ,EAIIC,cAJJ,EAKIC,aALJ,EAMIC,aANJ,EAOIC,UAPJ,EAQIC,gBARJ,EASIC,aATJ,EAUIC,cAVJ,QAWO,SAXP,C,CAaA;;AACA,OAAO,MAAMC,iBAAiB,GAAG,MAAM,MAAMC,QAAN,IAAkB;AACrD,MAAI;AACA,UAAMC,GAAG,GAAG,MAAMd,KAAK,CAACe,GAAN,CAAU,iBAAV,CAAlB;AACAF,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEd,WADD;AAELe,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,KAAD,CAAR;AAIH,GAND,CAME,OAAOC,GAAP,EAAY;AACVN,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEV,aADD;AAELW,MAAAA,OAAO,EAAE;AAAEG,QAAAA,GAAG,EAAED,GAAG,CAACE,QAAJ,CAAaC,UAApB;AAAgCC,QAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AAArD;AAFJ,KAAD,CAAR;AAKH;AACJ,CAdM,C,CAeP;;AACA,OAAO,MAAMC,WAAW,GAAG,MAAM,MAAMX,QAAN,IAAkB;AAC/C,MAAI;AACA,UAAMC,GAAG,GAAG,MAAMd,KAAK,CAACe,GAAN,CAAU,cAAV,CAAlB;AAEAF,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEZ,YADD;AAELa,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,KAAD,CAAR;AAIH,GAPD,CAOE,OAAOC,GAAP,EAAY;AACVN,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEV,aADD;AAELW,MAAAA,OAAO,EAAE;AAAEG,QAAAA,GAAG,EAAED,GAAG,CAACE,QAAJ,CAAaC,UAApB;AAAgCC,QAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AAArD;AAFJ,KAAD,CAAR;AAIH;AACJ,CAdM,C,CAgBP;;AACA,OAAO,MAAME,cAAc,GAAGC,QAAQ,IAAI,MAAMb,QAAN,IAAkB;AACxD,MAAI;AACA,UAAMC,GAAG,GAAG,MAAMd,KAAK,CAACe,GAAN,CAAW,uBAAsBW,QAAS,EAA1C,CAAlB;AACAb,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEb,iBADD;AAELc,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,KAAD,CAAR;AAIH,GAND,CAME,OAAOC,GAAP,EAAY;AACVN,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEV,aADD;AAELW,MAAAA,OAAO,EAAE;AAAEG,QAAAA,GAAG,EAAED,GAAG,CAACE,QAAJ,CAAaC,UAApB;AAAgCC,QAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AAArD;AAFJ,KAAD,CAAR;AAIH;AACJ,CAbM,C,CAeP;;AACA,OAAO,MAAMI,aAAa,GAAG,CAACC,QAAD,EAAWC,OAAX,EAAoBC,IAAI,GAAC,KAAzB,KAAmC,MAAMjB,QAAN,IAAkB;AAC9E,MAAI;AACA,UAAMkB,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AADE,KAAf;AAKA,UAAMlB,GAAG,GAAG,MAAMd,KAAK,CAACiC,IAAN,CAAW,aAAX,EAA0BL,QAA1B,EAAoCG,MAApC,CAAlB;AACAlB,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEd,WADD;AAELe,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,KAAD,CAAR;AAIAL,IAAAA,QAAQ,CAACZ,QAAQ,CAAC6B,IAAI,GAAG,iBAAH,GAAuB,iBAA5B,EAA+C,SAA/C,CAAT,CAAR;;AAEA,QAAG,CAACA,IAAJ,EAAU;AACND,MAAAA,OAAO,CAACK,IAAR,CAAa,YAAb;AACH;AACJ,GAhBD,CAgBE,OAAOf,GAAP,EAAY;AACV,UAAMgB,MAAM,GAAGhB,GAAG,CAACE,QAAJ,CAAaH,IAAb,CAAkBiB,MAAjC;;AACA,QAAGA,MAAH,EAAW;AACPA,MAAAA,MAAM,CAACC,OAAP,CAAeC,KAAK,IAAIxB,QAAQ,CAACZ,QAAQ,CAACoC,KAAK,CAACjB,GAAP,EAAY,QAAZ,CAAT,CAAhC;AACH;;AAEDP,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEV,aADD;AAELW,MAAAA,OAAO,EAAE;AAAEG,QAAAA,GAAG,EAAED,GAAG,CAACE,QAAJ,CAAaC,UAApB;AAAgCC,QAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AAArD;AAFJ,KAAD,CAAR;AAIH;AACJ,CA5BM,C,CA8BP;;AACA,OAAO,MAAMe,aAAa,GAAG,CAACV,QAAD,EAAWC,OAAX,KAAuB,MAAMhB,QAAN,IAAkB;AAClE,MAAI;AACA,UAAMkB,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AADE,KAAf;AAKA,UAAMlB,GAAG,GAAG,MAAMd,KAAK,CAACuC,GAAN,CAAU,wBAAV,EAAoCX,QAApC,EAA8CG,MAA9C,CAAlB;AACAlB,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEX,cADD;AAELY,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,KAAD,CAAR;AAIAL,IAAAA,QAAQ,CAACZ,QAAQ,CAAC,kBAAD,EAAqB,SAArB,CAAT,CAAR;AACA4B,IAAAA,OAAO,CAACK,IAAR,CAAa,YAAb;AACH,GAbD,CAaE,OAAOf,GAAP,EAAY;AACV,UAAMgB,MAAM,GAAGhB,GAAG,CAACE,QAAJ,CAAaH,IAAb,CAAkBiB,MAAjC;;AACA,QAAGA,MAAH,EAAW;AACPA,MAAAA,MAAM,CAACC,OAAP,CAAeC,KAAK,IAAIxB,QAAQ,CAACZ,QAAQ,CAACoC,KAAK,CAACjB,GAAP,EAAY,QAAZ,CAAT,CAAhC;AACH;;AAEDP,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEV,aADD;AAELW,MAAAA,OAAO,EAAE;AAAEG,QAAAA,GAAG,EAAED,GAAG,CAACE,QAAJ,CAAaC,UAApB;AAAgCC,QAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AAArD;AAFJ,KAAD,CAAR;AAIH;AACJ,CAzBM,C,CA0BP;;AACA,OAAO,MAAMiB,YAAY,GAAG,CAACZ,QAAD,EAAWC,OAAX,KAAuB,MAAMhB,QAAN,IAAkB;AACjE,MAAI;AACA,UAAMkB,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AADE,KAAf;AAKA,UAAMlB,GAAG,GAAG,MAAMd,KAAK,CAACuC,GAAN,CAAU,uBAAV,EAAmCX,QAAnC,EAA6CG,MAA7C,CAAlB;AACAlB,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEX,cADD;AAELY,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,KAAD,CAAR;AAIAL,IAAAA,QAAQ,CAACZ,QAAQ,CAAC,iBAAD,EAAoB,SAApB,CAAT,CAAR;AACAwC,IAAAA,OAAO,CAACC,GAAR,CAAYb,OAAZ;AAEAA,IAAAA,OAAO,CAACK,IAAR,CAAa,YAAb;AACH,GAfD,CAeE,OAAOf,GAAP,EAAY;AACV,UAAMgB,MAAM,GAAGhB,GAAG,CAACE,QAAJ,CAAaH,IAAb,CAAkBiB,MAAjC;;AACA,QAAGA,MAAH,EAAW;AACPA,MAAAA,MAAM,CAACC,OAAP,CAAeC,KAAK,IAAIxB,QAAQ,CAACZ,QAAQ,CAACoC,KAAK,CAACjB,GAAP,EAAY,QAAZ,CAAT,CAAhC;AACH;;AAEDP,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEV,aADD;AAELW,MAAAA,OAAO,EAAE;AAAEG,QAAAA,GAAG,EAAED,GAAG,CAACE,QAAJ,CAAaC,UAApB;AAAgCC,QAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AAArD;AAFJ,KAAD,CAAR;AAIH;AACJ,CA3BM,C,CA6BP;;AACA,OAAO,MAAMoB,gBAAgB,GAAGC,MAAM,IAAI,MAAM/B,QAAN,IAAkB;AACxD,MAAI;AACA,UAAMC,GAAG,GAAG,MAAMd,KAAK,CAAC6C,MAAN,CAAc,0BAAyBD,MAAO,EAA9C,CAAlB;AACA/B,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEX,cADD;AAELY,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,KAAD,CAAR;AAIAL,IAAAA,QAAQ,CAACZ,QAAQ,CAAC,oBAAD,EAAuB,SAAvB,CAAT,CAAR;AACH,GAPD,CAOE,OAAOkB,GAAP,EAAY;AACVN,IAAAA,QAAQ,CAAE;AACNG,MAAAA,IAAI,EAAEV,aADA;AAENW,MAAAA,OAAO,EAAE;AAAEG,QAAAA,GAAG,EAAED,GAAG,CAACE,QAAJ,CAAaC,UAApB;AAAgCC,QAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AAArD;AAFH,KAAF,CAAR;AAIH;AACJ,CAdM,C,CAeP;;AACA,OAAO,MAAMuB,eAAe,GAAGC,MAAM,IAAI,MAAMlC,QAAN,IAAkB;AACvD,MAAI;AACA,UAAMC,GAAG,GAAG,MAAMd,KAAK,CAAC6C,MAAN,CAAc,yBAAwBE,MAAO,EAA7C,CAAlB;AACAlC,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEX,cADD;AAELY,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,KAAD,CAAR;AAIAL,IAAAA,QAAQ,CAACZ,QAAQ,CAAC,mBAAD,EAAsB,SAAtB,CAAT,CAAR;AACH,GAPD,CAOE,OAAOkB,GAAP,EAAY;AACVN,IAAAA,QAAQ,CAAE;AACNG,MAAAA,IAAI,EAAEV,aADA;AAENW,MAAAA,OAAO,EAAE;AAAEG,QAAAA,GAAG,EAAED,GAAG,CAACE,QAAJ,CAAaC,UAApB;AAAgCC,QAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AAArD;AAFH,KAAF,CAAR;AAIH;AACJ,CAdM,C,CAgBP;;AACA,OAAO,MAAMyB,SAAS,GAAG,CAACtB,QAAD,EAAWE,QAAX,KAAwB,MAAMf,QAAN,IAAkB;AAC/D,QAAMkB,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AADE,GAAf;;AAKA,MAAI;AACA,UAAMlB,GAAG,GAAG,MAAMd,KAAK,CAACiC,IAAN,CAAY,wBAAuBP,QAAS,EAA5C,EAA+CE,QAA/C,EAAyDG,MAAzD,CAAlB;AACAlB,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAER,UADD;AAELS,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,KAAD,CAAR;AAKAL,IAAAA,QAAQ,CAACZ,QAAQ,CAAC,cAAD,EAAiB,SAAjB,CAAT,CAAR;AACH,GARD,CAQE,OAAOkB,GAAP,EAAY;AACVN,IAAAA,QAAQ,CAAE;AACNG,MAAAA,IAAI,EAAEP,gBADA;AAENQ,MAAAA,OAAO,EAAE;AAAEG,QAAAA,GAAG,EAAED,GAAG,CAACE,QAAJ,CAAaC,UAApB;AAAgCC,QAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AAArD;AAFH,KAAF,CAAR;AAIH;AACJ,CApBM,C,CAsBP;;AACA,OAAO,MAAM0B,YAAY,GAAG,CAACvB,QAAD,EAAWwB,QAAX,KAAwB,MAAMrC,QAAN,IAAkB;AAClE,MAAI;AACC,UAAMb,KAAK,CAAC6C,MAAN,CAAc,uBAAsBnB,QAAS,IAAGwB,QAAS,EAAzD,CAAN;AAEDrC,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAEN,aADD;AAELO,MAAAA,OAAO,EAAEiC;AAFJ,KAAD,CAAR;AAKArC,IAAAA,QAAQ,CAACZ,QAAQ,CAAC,iBAAD,EAAoB,SAApB,CAAT,CAAR;AACH,GATD,CASE,OAAOkB,GAAP,EAAY;AACVN,IAAAA,QAAQ,CAAE;AACNG,MAAAA,IAAI,EAAEP,gBADA;AAENQ,MAAAA,OAAO,EAAE;AAAEG,QAAAA,GAAG,EAAED,GAAG,CAACE,QAAJ,CAAaC,UAApB;AAAgCC,QAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AAArD;AAFH,KAAF,CAAR;AAIH;AACJ,CAhBM,C,CAkBP;;AACA,OAAO,MAAM4B,aAAa,GAAG,MAAM,MAAMtC,QAAN,IAAkB;AACjD,MAAGuC,MAAM,CAACC,OAAP,CAAe,uCAAf,CAAH,EAA4D;AACxD,QAAI;AACA,YAAMrD,KAAK,CAAC6C,MAAN,CAAa,cAAb,CAAN;AAEAhC,MAAAA,QAAQ,CAAC;AACLG,QAAAA,IAAI,EAAET;AADD,OAAD,CAAR;AAGAM,MAAAA,QAAQ,CAAC;AACLG,QAAAA,IAAI,EAAEL;AADD,OAAD,CAAR;AAIAE,MAAAA,QAAQ,CAACZ,QAAQ,CAAC,+BAAD,EAAkC,SAAlC,CAAT,CAAR;AACH,KAXD,CAWE,OAAOkB,GAAP,EAAY;AACVN,MAAAA,QAAQ,CAAE;AACNG,QAAAA,IAAI,EAAEV,aADA;AAENW,QAAAA,OAAO,EAAE;AAAEG,UAAAA,GAAG,EAAED,GAAG,CAACE,QAAJ,CAAaC,UAApB;AAAgCC,UAAAA,MAAM,EAAEJ,GAAG,CAACE,QAAJ,CAAaE;AAArD;AAFH,OAAF,CAAR;AAIH;AACJ;AACJ,CApBM","sourcesContent":["import axios from 'axios';\r\nimport {setAlert} from './alert';\r\n\r\nimport {\r\n    GET_PROFILE,\r\n    GET_PROFILE_BY_ID,\r\n    GET_PROFILES,\r\n    UPDATE_PROFILE,\r\n    PROFILE_ERROR,\r\n    CLEAR_PROFILE,\r\n    ADD_REVIEW,\r\n    ADD_REVIEW_ERROR,\r\n    REMOVE_REVIEW,\r\n    DELETE_ACCOUNT\r\n} from './types';\r\n\r\n// Get current doctors profile\r\nexport const getCurrentProfile = () => async dispatch => {\r\n    try {\r\n        const res = await axios.get('/api/profile/me');\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n        \r\n    }\r\n};\r\n// Get all profiles\r\nexport const getProfiles = () => async dispatch => {\r\n    try {\r\n        const res = await axios.get('/api/profile');\r\n\r\n        dispatch({\r\n            type: GET_PROFILES,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};\r\n\r\n// Get profiles by doctor id\r\nexport const getProfileById = doctorId => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`/api/profile/doctor/${doctorId}`);        \r\n        dispatch({\r\n            type: GET_PROFILE_BY_ID,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};\r\n\r\n// Create / Update a profile\r\nexport const createProfile = (formData, history, edit=false) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        const res = await axios.post('api/profile', formData, config);\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        });\r\n        dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\r\n\r\n        if(!edit) {\r\n            history.push('/dashboard');\r\n        }\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n        if(errors) {\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};\r\n\r\n// ADD Experience\r\nexport const addExperience = (formData, history) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        const res = await axios.put('api/profile/experience', formData, config);\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n        dispatch(setAlert(\"Experience added\", 'success'));\r\n        history.push('/dashboard');\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n        if(errors) {\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};\r\n// ADD Education\r\nexport const addEducation = (formData, history) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        const res = await axios.put('api/profile/education', formData, config);\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n        dispatch(setAlert(\"Education added\", 'success'));\r\n        console.log(history);\r\n        \r\n        history.push('/dashboard');\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n        if(errors) {\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};\r\n\r\n// Delete experience\r\nexport const deleteExperience = exp_id => async dispatch => {\r\n    try {\r\n        const res = await axios.delete(`api/profile/experience/${exp_id}`);\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n        dispatch(setAlert(\"Experience Removed\", 'success'));\r\n    } catch (err) {\r\n        dispatch ({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};\r\n// Delete education\r\nexport const deleteEducation = edu_id => async dispatch => {\r\n    try {\r\n        const res = await axios.delete(`api/profile/education/${edu_id}`);\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n        dispatch(setAlert(\"Education Removed\", 'success'));\r\n    } catch (err) {\r\n        dispatch ({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};\r\n\r\n// Add review\r\nexport const addReview = (doctorId, formData) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n    try {\r\n        const res = await axios.post(`/api/profile/doctor/:${doctorId}`, formData, config);\r\n        dispatch({\r\n            type: ADD_REVIEW,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert('Review Added', 'success'))\r\n    } catch (err) {\r\n        dispatch ({\r\n            type: ADD_REVIEW_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};\r\n\r\n// Delete Review\r\nexport const deleteReview = (doctorId, reviewId) => async dispatch => {\r\n    try {\r\n         await axios.delete(`/api/profile/doctor/${doctorId}/${reviewId}`);\r\n        \r\n        dispatch({\r\n            type: REMOVE_REVIEW,\r\n            payload: reviewId\r\n        });\r\n\r\n        dispatch(setAlert('Comment removed', 'success'));\r\n    } catch (err) {\r\n        dispatch ({\r\n            type: ADD_REVIEW_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};\r\n\r\n// Delete account and profile\r\nexport const deleteAccount = () => async dispatch => {\r\n    if(window.confirm('Are you sure? this can not be undone!')) {\r\n        try {\r\n            await axios.delete('/api/profile');\r\n    \r\n            dispatch({\r\n                type: CLEAR_PROFILE\r\n            });\r\n            dispatch({\r\n                type: DELETE_ACCOUNT\r\n            });\r\n    \r\n            dispatch(setAlert(\"Your Account has been Removed\", 'success'));\r\n        } catch (err) {\r\n            dispatch ({\r\n                type: PROFILE_ERROR,\r\n                payload: { msg: err.response.statusText, status: err.response.status }\r\n            });\r\n        }\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}