{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_APPOINTMENTS, ADD_APPOINTMENTS, UPDATE_APPOINTMENTS, APPOINTMENT_ERROR, DELETE_USER_ACCOUNT } from './types'; // Get Appointments\n\nexport const getAppointments = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/authUser');\n    dispatch({\n      type: GET_APPOINTMENTS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: APPOINTMENT_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n\n  ;\n}; // Add appointment\n\nexport const addAppointment = (doctorId, formData, history) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.post(`/api/appointment/${doctorId}`, formData, config);\n    dispatch({\n      type: ADD_APPOINTMENTS,\n      payload: res.data\n    });\n    dispatch(setAlert('Appointment booked', 'success'));\n    history.push('/appointment');\n  } catch (err) {\n    dispatch({\n      type: APPOINTMENT_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n\n  ;\n}; // Delete appointment\n\nexport const deleteAppointment = appointmentId => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/authUser/${appointmentId}`);\n    dispatch({\n      type: UPDATE_APPOINTMENTS,\n      payload: res.data\n    });\n    dispatch(setAlert('Appointment removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: APPOINTMENT_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n\n  ;\n}; // Delete user account\n\nexport const deleteAccountUser = () => async dispatch => {\n  if (window.confirm('Are you sure? this can not be undone!')) {\n    try {\n      await axios.delete('/api/authUser');\n      dispatch({\n        type: DELETE_USER_ACCOUNT\n      });\n      dispatch(setAlert(\"Your account has been removed\", 'success'));\n    } catch (err) {\n      dispatch({\n        type: APPOINTMENT_ERROR,\n        payload: {\n          msg: err.response.statusText,\n          status: err.response.status\n        }\n      });\n    }\n  }\n};","map":{"version":3,"sources":["/home/gopi/Desktop/medco/client/src/actions/appointment.js"],"names":["axios","setAlert","GET_APPOINTMENTS","ADD_APPOINTMENTS","UPDATE_APPOINTMENTS","APPOINTMENT_ERROR","DELETE_USER_ACCOUNT","getAppointments","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","addAppointment","doctorId","formData","history","config","headers","post","push","deleteAppointment","appointmentId","delete","deleteAccountUser","window","confirm"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport {setAlert} from './alert';\r\n\r\nimport {\r\n    GET_APPOINTMENTS,\r\n    ADD_APPOINTMENTS,\r\n    UPDATE_APPOINTMENTS,\r\n    APPOINTMENT_ERROR,\r\n    DELETE_USER_ACCOUNT\r\n} from './types';\r\n\r\n// Get Appointments\r\nexport const getAppointments = () => async dispatch => {\r\n    try {\r\n        const res = await axios.get('/api/authUser');\r\n        dispatch({\r\n            type: GET_APPOINTMENTS,\r\n            payload: res.data\r\n        });\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: APPOINTMENT_ERROR,\r\n            payload: {msg: err.response.statusText, status: err.response.status}\r\n        });\r\n    };\r\n};\r\n\r\n// Add appointment\r\nexport const addAppointment = (doctorId, formData, history) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n    try {\r\n        const res = await axios.post(`/api/appointment/${doctorId}`,formData, config);\r\n        dispatch({\r\n            type: ADD_APPOINTMENTS,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert('Appointment booked', 'success'));\r\n        history.push('/appointment');\r\n        \r\n    } catch (err) {\r\n        dispatch({\r\n            type: APPOINTMENT_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    };\r\n};\r\n\r\n// Delete appointment\r\nexport const deleteAppointment = (appointmentId) => async dispatch => {\r\n    try {\r\n        const res = await axios.delete(`/api/authUser/${appointmentId}`);\r\n        dispatch({\r\n            type: UPDATE_APPOINTMENTS,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert('Appointment removed', 'success'));\r\n    } catch (err) {\r\n        dispatch({\r\n            type: APPOINTMENT_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    };\r\n};\r\n\r\n// Delete user account\r\nexport const deleteAccountUser = () => async dispatch => {\r\n    if(window.confirm('Are you sure? this can not be undone!')) {\r\n        try {\r\n            await axios.delete('/api/authUser');\r\n\r\n            dispatch({\r\n                type: DELETE_USER_ACCOUNT\r\n            });\r\n\r\n            dispatch(setAlert(\"Your account has been removed\", 'success'));\r\n        } catch (err) {\r\n            dispatch ({\r\n                type: APPOINTMENT_ERROR,\r\n                payload: { msg: err.response.statusText, status: err.response.status }\r\n            });\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}