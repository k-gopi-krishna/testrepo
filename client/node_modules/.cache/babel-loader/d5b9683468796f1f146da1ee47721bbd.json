{"ast":null,"code":"var _jsxFileName = \"/home/gopi/Desktop/medco/client/src/components/dashboard/Review.js\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Moment from \"react-moment\";\nimport { connect } from \"react-redux\";\n\nconst Review = ({\n  review,\n  patient\n}) => {\n  const reviews = review.map(rev => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"card-img-top\",\n    src: rev.avatar,\n    alt: \"Card image cap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, rev.text), /*#__PURE__*/React.createElement(\"p\", {\n    class: \"post-date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, \"posted on \", /*#__PURE__*/React.createElement(Moment, {\n    format: \"DD/MM/YYYY\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 21\n    }\n  }, rev.date)), /*#__PURE__*/React.createElement(\"em\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, rev.name))));\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  });\n};\n\nReview.propTypes = {\n  patient: PropTypes.array.isRequired\n};\nexport default connect(null)(Review);","map":{"version":3,"sources":["/home/gopi/Desktop/medco/client/src/components/dashboard/Review.js"],"names":["React","Fragment","useState","useEffect","PropTypes","Moment","connect","Review","review","patient","reviews","map","rev","avatar","text","date","name","propTypes","array","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,QAAqD,OAArD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAAyB;AACtC,QAAMC,OAAO,GAAGF,MAAM,CAACG,GAAP,CAAYC,GAAD,iBACzB;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAA8B,IAAA,GAAG,EAAEA,GAAG,CAACC,MAAvC;AAA+C,IAAA,GAAG,EAAC,gBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BD,GAAG,CAACE,IAA9B,CADF,eAEE;AAAG,IAAA,KAAK,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCACY,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BF,GAAG,CAACG,IAAjC,CADZ,CAFF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,GAAG,CAACI,IAAT,CALF,CAFF,CADc,CAAhB;AAYA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAuBD,CApCD;;AAsCAT,MAAM,CAACU,SAAP,GAAmB;AACjBR,EAAAA,OAAO,EAAEL,SAAS,CAACc,KAAV,CAAgBC;AADR,CAAnB;AAIA,eAAeb,OAAO,CAAC,IAAD,CAAP,CAAcC,MAAd,CAAf","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Moment from \"react-moment\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Review = ({ review, patient }) => {\r\n  const reviews = review.map((rev) => (\r\n    <div className=\"card\">\r\n      <img className=\"card-img-top\" src={rev.avatar} alt=\"Card image cap\" />\r\n      <div className=\"card-body\">\r\n        <p className=\"card-text\">{rev.text}</p>\r\n        <p class=\"post-date\">\r\n          posted on <Moment format=\"DD/MM/YYYY\">{rev.date}</Moment>\r\n        </p>\r\n        <em>{rev.name}</em>\r\n      </div>\r\n    </div>\r\n  ));\r\n  return (\r\n    <Fragment>\r\n      {/* <div className=\"review-graph\">\r\n                <div className=\"common-details\">\r\n                <h2 class=\"credentials\"><strong>Users Reviews</strong></h2>\r\n                    <br />\r\n                    <div id=\"testimonials\">\r\n                        <div class=\"scroll\">\r\n                            { review.length === 0 ? \"No Reviews Yet\" : reviews }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"common-details\">\r\n                    <h2 className=\"credentials\"><strong>Total Appointments</strong></h2>\r\n                    <br />\r\n                    <div id=\"graph\">\r\n                        <Graph patient={patient} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <br /> */}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nReview.propTypes = {\r\n  patient: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default connect(null)(Review);\r\n"]},"metadata":{},"sourceType":"module"}