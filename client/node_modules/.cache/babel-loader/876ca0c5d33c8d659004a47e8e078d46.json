{"ast":null,"code":"var _jsxFileName = \"/home/rithvik/Downloads/healthcare-main/client/src/components/dashboard/Graph.js\";\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { Line, Bar } from 'react-chartjs-2';\nimport PropTypes from 'prop-types';\n\nconst Graph = ({\n  patient\n}) => {\n  const [chartData, setChartData] = useState([]);\n\n  const chart = () => {\n    const patientData = [];\n    const jan = [0];\n    const feb = [0];\n    const mar = [0];\n    const apr = [0];\n    const may = [0];\n    const jun = [0];\n    const jul = [0];\n    const aug = [0];\n    const sep = [0];\n    const oct = [0];\n    const nov = [0];\n    const dec = [0];\n    patient.forEach(pat => {\n      if (new Date(pat.date).getMonth() === 0) {\n        return jan.push(jan[0] + 1);\n      } else if (new Date(pat.date).getMonth() === 1) {\n        return feb.push(feb[0] + 1);\n      } else if (new Date(pat.date).getMonth() === 2) {\n        return mar.push(mar[0] + 1);\n      } else if (new Date(pat.date).getMonth() === 3) {\n        return apr.push(apr[0] + 1);\n      } else if (new Date(pat.date).getMonth() === 4) {\n        return may.push(may[0] + 1);\n      } else if (new Date(pat.date).getMonth() === 5) {\n        return jun.push(jun[0] + 1);\n      } else if (new Date(pat.date).getMonth() === 6) {\n        return jul.push(jul[0] + 1);\n      } else if (new Date(pat.date).getMonth() === 7) {\n        return aug.push(aug[0] + 1);\n      } else if (new Date(pat.date).getMonth() === 8) {\n        return sep.push(sep[0] + 1);\n      } else if (new Date(pat.date).getMonth() === 9) {\n        return oct.push(oct[0] + 1);\n      } else if (new Date(pat.date).getMonth() === 10) {\n        return nov.push(nov[0] + 1);\n      } else if (new Date(pat.date).getMonth() === 11) {\n        return dec.push(dec[0] + 1);\n      } else {}\n    });\n    var janData = jan.reduce((a, b) => a + b, jan[0]);\n    var febData = feb.reduce((a, b) => a + b, feb[0]);\n    var marData = mar.reduce((a, b) => a + b, mar[0]);\n    var aprData = apr.reduce((a, b) => a + b, apr[0]);\n    var mayData = may.reduce((a, b) => a + b, may[0]);\n    var junData = jun.reduce((a, b) => a + b, jun[0]);\n    var julData = jul.reduce((a, b) => a + b, jul[0]);\n    var augData = aug.reduce((a, b) => a + b, aug[0]);\n    var sepData = sep.reduce((a, b) => a + b, sep[0]);\n    var octData = oct.reduce((a, b) => a + b, oct[0]);\n    var novData = nov.reduce((a, b) => a + b, nov[0]);\n    var decData = dec.reduce((a, b) => a + b, dec[0]);\n    patientData.push(janData);\n    patientData.push(febData);\n    patientData.push(marData);\n    patientData.push(aprData);\n    patientData.push(mayData);\n    patientData.push(junData);\n    patientData.push(julData);\n    patientData.push(augData);\n    patientData.push(sepData);\n    patientData.push(octData);\n    patientData.push(novData);\n    patientData.push(decData);\n    console.log(patientData);\n    setChartData({\n      labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n      datasets: [{\n        label: \"level of patients\",\n        data: patientData,\n        borderColor: [\"#17a2b8\"],\n        pointBorderColor: [\"#17a2b8\", \"#17a2b8\", \"#17a2b8\", \"#17a2b8\", \"#17a2b8\", \"#17a2b8\", \"#17a2b8\", \"#17a2b8\", \"#17a2b8\", \"#17a2b8\", \"#17a2b8\", \"#17a2b8\"],\n        borderWidth: 3\n      }]\n    });\n  };\n\n  useEffect(() => {\n    chart();\n  }, []);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-graph\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Line, {\n    data: chartData,\n    options: {\n      title: {\n        text: \"APPOINTMENTS PER MONTHS\",\n        display: true\n      },\n      labels: {\n        \"fontColor\": \"#f4f4f4\",\n        \"fontWeight\": \"bold\"\n      },\n      scales: {\n        yAxes: [{\n          ticks: {\n            autoSkip: true,\n            maxTicksLimit: 10,\n            beginAtZero: true\n          },\n          gridLines: {\n            display: false\n          }\n        }],\n        xAxes: [{\n          gridLines: {\n            display: false\n          }\n        }]\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 29\n    }\n  })));\n};\n\nGraph.propTypes = {\n  patient: PropTypes.array.isRequired\n};\nexport default Graph;","map":{"version":3,"sources":["/home/rithvik/Downloads/healthcare-main/client/src/components/dashboard/Graph.js"],"names":["React","Fragment","useState","useEffect","Line","Bar","PropTypes","Graph","patient","chartData","setChartData","chart","patientData","jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec","forEach","pat","Date","date","getMonth","push","janData","reduce","a","b","febData","marData","aprData","mayData","junData","julData","augData","sepData","octData","novData","decData","console","log","labels","datasets","label","data","borderColor","pointBorderColor","borderWidth","title","text","display","scales","yAxes","ticks","autoSkip","maxTicksLimit","beginAtZero","gridLines","xAxes","propTypes","array","isRequired"],"mappings":"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","sourcesContent":["import React, {Fragment, useState, useEffect} from 'react';  \r\nimport {Line, Bar} from 'react-chartjs-2';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Graph = ({patient}) => {\r\n    const [chartData, setChartData] = useState([]);\r\n\r\n    const chart = () => {\r\n        const patientData = [];\r\n        const jan = [0];\r\n        const feb = [0];\r\n        const mar = [0];\r\n        const apr = [0];\r\n        const may = [0];\r\n        const jun = [0];\r\n        const jul = [0];\r\n        const aug = [0];\r\n        const sep = [0];\r\n        const oct = [0];\r\n        const nov = [0];\r\n        const dec = [0];\r\n    \r\n        patient.forEach(pat => {\r\n            if(new Date(pat.date).getMonth() === 0) {\r\n                return jan.push(jan[0]+1);\r\n            } else if(new Date(pat.date).getMonth() === 1) {\r\n                return feb.push(feb[0]+1); \r\n            } else if(new Date(pat.date).getMonth() === 2) {\r\n                return mar.push(mar[0]+1);\r\n            } else if(new Date(pat.date).getMonth() === 3) {\r\n                return apr.push(apr[0]+1);\r\n            } else if(new Date(pat.date).getMonth() === 4) {\r\n                return may.push(may[0]+1);\r\n            } else if(new Date(pat.date).getMonth() === 5) {\r\n                return jun.push(jun[0]+1);\r\n            } else if(new Date(pat.date).getMonth() === 6) {\r\n                return jul.push(jul[0]+1);\r\n            } else if(new Date(pat.date).getMonth() === 7) {\r\n                return aug.push(aug[0]+1);\r\n            } else if(new Date(pat.date).getMonth() === 8) {\r\n                return sep.push(sep[0]+1);\r\n            } else if(new Date(pat.date).getMonth() === 9) {\r\n                return oct.push(oct[0]+1);\r\n            } else if(new Date(pat.date).getMonth() === 10) {\r\n                return nov.push(nov[0]+1);\r\n            } else if(new Date(pat.date).getMonth() === 11) {\r\n                return dec.push(dec[0]+1);\r\n            } else {\r\n            }\r\n        });\r\n    \r\n        var janData = jan.reduce( (a, b) => a+b, jan[0]);\r\n        var febData = feb.reduce( (a, b) => a+b, feb[0]);\r\n        var marData = mar.reduce( (a, b) => a+b, mar[0]);\r\n        var aprData = apr.reduce( (a, b) => a+b, apr[0]);\r\n        var mayData = may.reduce( (a, b) => a+b, may[0]);\r\n        var junData = jun.reduce( (a, b) => a+b, jun[0]);\r\n        var julData = jul.reduce( (a, b) => a+b, jul[0]);\r\n        var augData = aug.reduce( (a, b) => a+b, aug[0]);\r\n        var sepData = sep.reduce( (a, b) => a+b, sep[0]);\r\n        var octData = oct.reduce( (a, b) => a+b, oct[0]);\r\n        var novData = nov.reduce( (a, b) => a+b, nov[0]);\r\n        var decData = dec.reduce( (a, b) => a+b, dec[0]);\r\n    \r\n        patientData.push(janData);\r\n        patientData.push(febData);\r\n        patientData.push(marData);\r\n        patientData.push(aprData);\r\n        patientData.push(mayData);\r\n        patientData.push(junData);\r\n        patientData.push(julData);\r\n        patientData.push(augData);\r\n        patientData.push(sepData);\r\n        patientData.push(octData);\r\n        patientData.push(novData);\r\n        patientData.push(decData);\r\n    \r\n        console.log(patientData);\r\n    \r\n        setChartData({\r\n            labels: [\r\n                    \"January\", \r\n                    \"February\", \r\n                    \"March\", \r\n                    \"April\", \r\n                    \"May\", \r\n                    \"June\", \r\n                    \"July\", \r\n                    \"August\", \r\n                    \"September\", \r\n                    \"October\", \r\n                    \"November\", \r\n                    \"December\"\r\n                ],\r\n            datasets: [\r\n                {\r\n                    label: \"level of patients\",\r\n                    data: patientData,\r\n                    borderColor: [\r\n                        \"#17a2b8\"\r\n                    ],\r\n                    pointBorderColor: [\r\n                        \"#17a2b8\",\r\n                        \"#17a2b8\",\r\n                        \"#17a2b8\",\r\n                        \"#17a2b8\",\r\n                        \"#17a2b8\",\r\n                        \"#17a2b8\",\r\n                        \"#17a2b8\",\r\n                        \"#17a2b8\",\r\n                        \"#17a2b8\",\r\n                        \"#17a2b8\",\r\n                        \"#17a2b8\",\r\n                        \"#17a2b8\",\r\n                    ],\r\n                    borderWidth: 3\r\n                }\r\n            ]\r\n        }); \r\n    };\r\n    useEffect(() => {\r\n        chart();\r\n    }, []);\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"user-graph\">\r\n                            <Line\r\n                                data={chartData}\r\n                                options={{\r\n                                    title: { text: \"APPOINTMENTS PER MONTHS\", display: true },\r\n                                    labels: {\r\n                                        \"fontColor\": \"#f4f4f4\",\r\n                                        \"fontWeight\": \"bold\",\r\n                                    },\r\n                                    scales: {\r\n                                    yAxes: [\r\n                                        {\r\n                                        ticks: {\r\n                                            autoSkip: true,\r\n                                            maxTicksLimit: 10,\r\n                                            beginAtZero: true\r\n                                        },\r\n                                        gridLines: {\r\n                                            display: false\r\n                                        }\r\n                                        }\r\n                                    ],\r\n                                    xAxes: [\r\n                                        {\r\n                                        gridLines: {\r\n                                            display: false\r\n                                        }\r\n                                        }\r\n                                    ]\r\n                                    }\r\n                                }}\r\n                            />\r\n                        </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nGraph.propTypes = {\r\n    patient: PropTypes.array.isRequired,\r\n}\r\n\r\nexport default Graph;\r\n"]},"metadata":{},"sourceType":"module"}