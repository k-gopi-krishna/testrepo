{"ast":null,"code":"var _jsxFileName = \"/home/rithvik/Downloads/healthcare-main/client/src/components/profiles/Profiles.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { Dots } from 'react-preloaders';\nimport ProfileItem from './ProfileItem';\nimport { getProfiles } from '../../actions/profile';\n\nconst Profiles = ({\n  getProfiles,\n  profile: {\n    profiles,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getProfiles();\n  }, [getProfiles]);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 25\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    id: \"profiles-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"heading-common\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 33\n    }\n  }, \"Doctor Profiles\"))), /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"welcome-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-user-md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 57\n    }\n  }), \" Book your Appointments\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 25\n    }\n  }), profiles != null ? profiles.map(profile => /*#__PURE__*/React.createElement(ProfileItem, {\n    key: profile._id,\n    profile: profile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 37\n    }\n  })) : /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 33\n    }\n  }, \"No Profiles found..\")))));\n};\n\nProfiles.propTypes = {\n  getProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getProfiles\n})(Profiles);","map":{"version":3,"sources":["/home/rithvik/Downloads/healthcare-main/client/src/components/profiles/Profiles.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","Dots","ProfileItem","getProfiles","Profiles","profile","profiles","loading","map","_id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAAQC,WAAR,QAA0B,uBAA1B;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACD,EAAAA,WAAD;AAAcE,EAAAA,OAAO,EAAE;AAAEC,IAAAA,QAAF;AAAWC,IAAAA;AAAX;AAAvB,CAAD,KAAkD;AAC/DV,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,WAAW;AACd,GAFQ,EAEP,CAACA,WAAD,CAFO,CAAT;AAIA,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMI,OAAO,gBAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,gBACL,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAS,IAAA,EAAE,EAAC,eAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAJ,CADJ,CADJ,eAII;AAAI,IAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAgC;AAAG,IAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhC,4BAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,EAOQD,QAAQ,IAAI,IAAZ,GACIA,QAAQ,CAACE,GAAT,CAAaH,OAAO,iBAChB,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEA,OAAO,CAACI,GAA1B;AAA+B,IAAA,OAAO,EAAEJ,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,gBAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAXZ,CADJ,CADA,CAFR,CADJ;AAwBH,CA7BD;;AA+BAD,QAAQ,CAACM,SAAT,GAAqB;AACjBP,EAAAA,WAAW,EAAEL,SAAS,CAACa,IAAV,CAAeC,UADX;AAEjBP,EAAAA,OAAO,EAAEP,SAAS,CAACe,MAAV,CAAiBD;AAFT,CAArB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9BV,EAAAA,OAAO,EAAEU,KAAK,CAACV;AADe,CAAL,CAA7B;;AAIA,eAAeN,OAAO,CAACe,eAAD,EAAkB;AAACX,EAAAA;AAAD,CAAlB,CAAP,CAAwCC,QAAxC,CAAf","sourcesContent":["import React, {Fragment, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport {Dots} from 'react-preloaders';\r\nimport ProfileItem from './ProfileItem';\r\nimport {getProfiles} from '../../actions/profile';\r\n\r\nconst Profiles = ({getProfiles, profile: { profiles,loading }}) => {\r\n    useEffect(() => {\r\n        getProfiles();\r\n    },[getProfiles]);\r\n\r\n    return (\r\n        <Fragment>\r\n            { loading ? <Spinner /> : \r\n                <Fragment>\r\n                <section id=\"profiles-page\">\r\n                    <div className=\"container\">\r\n                        <div className=\"heading-common\">\r\n                            <h1><strong>Doctor Profiles</strong></h1>  \r\n                        </div>\r\n                        <h2 className=\"welcome-heading\"><i className=\"fas fa-user-md\"></i> Book your Appointments</h2>\r\n                        <br />\r\n                        {\r\n                            profiles != null ? (\r\n                                profiles.map(profile => (\r\n                                    <ProfileItem key={profile._id} profile={profile} />\r\n                                ))\r\n                            ) : <h4>No Profiles found..</h4>\r\n                        }\r\n                    </div>\r\n                </section>\r\n                </Fragment>\r\n            }\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nProfiles.propTypes = {\r\n    getProfiles: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile\r\n});\r\n\r\nexport default connect(mapStateToProps, {getProfiles})(Profiles);\r\n"]},"metadata":{},"sourceType":"module"}