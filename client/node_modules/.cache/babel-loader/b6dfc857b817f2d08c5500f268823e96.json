{"ast":null,"code":"var _jsxFileName = \"/home/gopi/Desktop/medco/client/src/components/routing/PrivateUserRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst PrivateUserRoute = ({\n  component: Component,\n  authUser: {\n    isUserAuthenticated,\n    loadingUser\n  },\n  ...rest\n}) => /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n  render: props => !isUserAuthenticated && !loadingUser ? /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/loginUser\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 21\n    }\n  }) : /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 21\n    }\n  })),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }\n}));\n\nPrivateUserRoute.propTypes = {\n  authUser: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  authUser: state.authUser\n});\n\nexport default connect(mapStateToProps)(PrivateUserRoute);","map":{"version":3,"sources":["/home/gopi/Desktop/medco/client/src/components/routing/PrivateUserRoute.js"],"names":["React","Route","Redirect","PropTypes","connect","PrivateUserRoute","component","Component","authUser","isUserAuthenticated","loadingUser","rest","props","propTypes","object","isRequired","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAeC,QAAf,QAA8B,kBAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAGA,MAAMC,gBAAgB,GAAG,CAAC;AAACC,EAAAA,SAAS,EAAEC,SAAZ;AACtBC,EAAAA,QAAQ,EAAE;AAACC,IAAAA,mBAAD;AAAsBC,IAAAA;AAAtB,GADY;AAEtB,KAAGC;AAFmB,CAAD,kBAGjB,oBAAC,KAAD,oBACQA,IADR;AAEI,EAAA,MAAM,EAAIC,KAAK,IACX,CAACH,mBAAD,IAAwB,CAACC,WAAzB,gBACI,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,gBAGI,oBAAC,SAAD,oBAAeE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAHR;;AAeAP,gBAAgB,CAACQ,SAAjB,GAA6B;AACzBL,EAAAA,QAAQ,EAAEL,SAAS,CAACW,MAAV,CAAiBC;AADF,CAA7B;;AAGA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAC9BT,EAAAA,QAAQ,EAAES,KAAK,CAACT;AADc,CAAL,CAA7B;;AAIA,eAAeJ,OAAO,CAACY,eAAD,CAAP,CAAyBX,gBAAzB,CAAf","sourcesContent":["import React from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nconst PrivateUserRoute = ({component: Component, \r\n    authUser: {isUserAuthenticated, loadingUser},\r\n    ...rest}) => (\r\n        <Route\r\n            {...rest}\r\n            render = {props =>     \r\n                !isUserAuthenticated && !loadingUser ? (\r\n                    <Redirect to=\"/loginUser\" />\r\n                ) : (\r\n                    <Component {...props} />\r\n                )\r\n            }\r\n        />\r\n);\r\n\r\nPrivateUserRoute.propTypes = {\r\n    authUser: PropTypes.object.isRequired\r\n}\r\nconst mapStateToProps = state => ({\r\n    authUser: state.authUser\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateUserRoute);\r\n"]},"metadata":{},"sourceType":"module"}